/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<TreeNode*>v;
    vector<int>sum;
    void inorder(TreeNode* root)
    {
        if(root->left!=NULL)
            inorder(root->left);
        v.push_back(root);
        sum.push_back(root->val);
        if(root->right!=NULL)
            inorder(root->right);
    }
    TreeNode* bstToGst(TreeNode* root) {
        if(root==NULL)
            return root;
        inorder(root);
        int n=v.size();
        for(int i=n-2;i>=0;i--)
            sum[i]+=sum[i+1];
        for(int i=0;i<n;i++)
            v[i]->val=sum[i];
        return root;
        
    }
};
